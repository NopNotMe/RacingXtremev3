timeremaining = [
	say (format "^f2Time remaining: %1" (? (= $arg2 1) (format "^f6%1 minutes" (abs $arg1)) (format "^f3%1 seconds" (abs $arg1))))
	
	if (= $arg2 1) [
		if (= 5 (abs $arg1)) [
			botsay 128 "Remember you can #skip maps!"
		]	
	]

	if (= $arg1 -10) [ // 10 seconds remaining
		asleep 5000 [
			loop i 5 [
				asleep (* $i 1000) [
					timeremaining (- 5 @i)
				]
			]
			asleep 5000 [
				endrace
			]
		]
	]
]


// duplicate
formatXP = [
	xp = $arg1;
	
	// 1000
	// Newbie
	if (< $xp 1001) [
		rank = (format "^f1|1| {Newbie} ^f5[%1/1000]" $xp)
	]
	
	// 10000
	// RecklessRacer
	if (&& (> $xp 1000) (< $xp 10001)) [
		
		tempxp = (- $xp 1000)
		
		rank = (format "^f1|2| {Reckless Racer} ^f5[%1/9000]" $tempxp)
	]
	
	
	// 25000
	// BindBeast
	if (&& (> $xp 10000) (< $xp 25001)) [
		
		tempxp = (- $xp 10000)
		
		rank = (format "^f1|3| {Bind Beast} ^f5[%1/15000]" $tempxp)
	]
	
	
	// 50000
	// PistolPro
	if (&& (> $xp 25000) (< $xp 50001)) [
		
		tempxp = (- $xp 25000)
		
		rank = (format "^f1|4| {Pistol Pro} ^f5[%1/25000]" $tempxp)
	]
	
	
	// 100000
	// ReconWarrior
	if (&& (> $xp 50000) (< $xp 100001)) [
		
		tempxp = (- $xp 50000)
		
		rank = (format "^f1|5| {Recon Warrior} ^f5[%1/50000]" $tempxp)
	]
	
	
	// 250000
	// JumpingJedi
	if (&& (> $xp 100000) (< $xp 250001)) [
		
		tempxp = (- $xp 100000)
		
		rank = (format "^f1|6| {Jumping Jedi} ^f5[%1/150000]" $tempxp)
	]
	
	// 500000
	// LightWave
	if (&& (> $xp 250000) (< $xp 500001)) [
		
		tempxp = (- $xp 250000)
		
		rank = (format "^f1|7| {Light Wave} ^f5[%1/250000]" $tempxp)
	]
	
	// 1000000
	// HyperSpeed
	if (&& (> $xp 500000) (< $xp 1000001)) [
		
		tempxp = (- $xp 500000)
		
		rank = (format "^f1|8| {Hyper Speed} ^f5[%1/500000]" $tempxp)
	]
	
	// 5000000
	// Xtreme
	if (&& (> $xp 1000000) (< $xp 5000001)) [
		
		tempxp = (- $xp 1000000)
		
		rank = (format "^f1|9| {^f6Xtreme^f1} ^f5[%1/4000000]" $tempxp)
	]
	
	if (> $xp 5000000) [
		
		tempxp = (- $xp 5000000)
		
		rank = (format "^f1|10| {^f3MAXED^f1} ^f5[^f3%1^f5]" $xp)
	]
	
	// Maxed

	result $rank

]

racetime = [
	starttime = $arg1
	timeremaining $starttime 1
	asleep (div (* $starttime 60000) 2) [
		time = (div $starttime 2)
		loop i (div $starttime 2) [
			asleep (* $i 60000) [
				timeremaining @time 1
			]
			time = (- $time 1)
		]
	]
	asleep (- (* $starttime 60000) 59000) [
		time = 50
		loop i 5 [
			asleep (* (+ $i 1) 10000) [
				timeremaining @time
			]
			time = (- $time 10)
		]
	]
	asleep (- (* $starttime 60000) 5000) [
		loop i 5 [
			asleep (* $i 1000) [
				timeremaining (- 5 @i)
			]
		]
		asleep 5000 [
			endrace
		]
	]
]


timeconverter = [
	if (>= $arg1 60) [
		if (!=f (modf $arg1 60) 0) [
			result (concatword "^f1" (div $arg1 60) " ^f7minute(s) and ^f5" (chop_time (modf $arg1 60)) " ^f7second(s)")
		] [
			result (concatword "^f1" (div $arg1 60) " ^f7minute(s)")
		]
	] [
			result (concatword "^f5" $arg1 " ^f7seconds")
	]
]

timeconverterlight = [
	if (>= $arg1 60) [
		if (!=f (modf $arg1 60) 0) [
			result (concatword  (div $arg1 60) "min " (chop_time (modf $arg1 60)) "s")
		] [
			if (> (div $arg1 60) 1) [
				result (concatword  (div $arg1 60) " mins")
			] [
				result (concatword  (div $arg1 60) " minute")
			]
		]
	] [
		if (> (modf $arg1 60) 1) [
			result (concatword (chop_time (modf $arg1 60)) " secs")
		] [
			result (concatword  (chop_time (modf $arg1 60)) " second")
		]
	]
]

action_time = [
	if (>= $arg1 60) [
		if (!= (mod $arg1 60) 0) [
			if (< (mod $arg1 60) 10) [
				result (concatword  (div $arg1 60) ":0" (mod $arg1 60))
			] [
				result (concatword  (div $arg1 60) ":" (mod $arg1 60))
			]
		] [
			result (concatword (div $arg1 60) ":00")
		]
	] [
		if (< (mod $arg1 60) 10) [
			result (concatword  "0:0" (mod $arg1 60))
		] [
			result (concatword  "0:" (mod $arg1 60))
		]
	]
]

chop_time = [ // chop the string so it doesn't have more than 3 decimal digits
	time2chop = $arg1
	pointpos = (strstr $time2chop ".")
	fourthnum = (substr $time2chop (+ $pointpos 4) 1)
	if (>= $fourthnum 5) [
		time2chop = (+f $time2chop (divf (- 10 $fourthnum) 10000))
	]
	result (substr $time2chop 0 (+ $pointpos 4))
]
