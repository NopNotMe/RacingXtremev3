//main race command
cmd_race = [
	if (= $arg2 1) [
		racemod 1 //enable C++ additions
		//pm $arg1 "racemod ^f0enabled"
		say "RACEMODE ^f0[enabled] test"
		
		addhandler onmapstart sendthumbnail
		
		addhandler oneditmode noedit
		addhandler onspawn reset
		addhandler ondisconnect delclient
		addhandler onconnect addclient
		addhandler ongetmap resetedit
		addhandler onreceivemap loadrace
		addhandler onswitchname checkregistered
		addhandler onpausegame checkracestarted
//		addhandler oncrc checkcrc
		addhandler onmodmap testingcrc
//		addhandler onmapstart checkcrc
//		addhandler onconnect checkcrc
///		addhandler onmodmap checkcrc
//		addhandler onauth login
		addhandler onsetmaster login
		addhandler ontext bot
		addhandler onspectator listactiveclients
		delhandler onghosttrigger srv_onghosttrigger
		delhandler onimission srv_showbest
		delhandler onimission irc_showbest

		registercommand "intermission" cmd_intermission 3 "" "Force the server to end the current map"
		registercommand "best" cmd_best 1 "" "Display the best runs for the current map if it exists"
		registercommand "mapsucks" cmd_mapsucks 1 "" "mapsucks ^f7Skip the map"
		registercommand "skip" cmd_skip 1 "" "skip ^f7Skip the map"
		registercommand "nextmap" cmd_nextmap 1 "" "mapsucks ^f7if enough players, skip the current race"
		registercommand "forcemap" cmd_forcemap 2 "s" "forcemap [mapname] ^f1Force to race on the specified race map"
		registercommand "irc" cmd_irc 1 "s" "irc <message> Send a message on IRC only (#racing-xtreme/irc.gamesurge.ml)"
		registercommand "raceghost" cmd_raceghost 2 "b" "raceghost 1|0 ^f1[show|hide players]"
		registercommand "disbanmsg" cmd_disbanmsg 3 "b" "disbanmsg 1|0  ^f1[enable|disable hiding of ban messages]"
		registercommand "refresh" cmd_refresh 3 "" "refresh ^f1Refresh racing files"
		registercommand "racemute" cmd_racemute 3 "c" "racemute [cn] ^f1Prevent a cheater to win"
		registercommand "raceunmute" cmd_raceunmute 3 "c" "raceunmute [cn]"
		registercommand "adminchat" cmd_adminchat 3 "s" "adminchat [message] ^f1Send a message to all admins connected"
		registercommand "authchat" cmd_authchat 2 "s" "authchat [message] ^f1Send a message to all auth and admins connected"
		registercommand "discall" cmd_discall 3 "" "discall ^f1Disconnect all the racers"
		registercommand "country" cmd_country 2 "c" "country [cn] ^f1Tells the racer's country"
		registercommand "racereset" cmd_racereset 2 "" "racereset ^f1Reset podium places and race time"
		registercommand "racetime" cmd_racetime 3 "i" "racetime ^f1Change the current map time"
		registercommand "racerestart" cmd_racerestart 2 "" "racereset ^f1Restart the current race"
		registercommand "racepause" cmd_racepause 1 "i" "racepause 1|0 ^f1[pause|unpause your run locally]"
		registercommand "localpause" cmd_localpause 3 "cbp" "localpause cn 1|0 cn|-1 ^f1[pause|unpause game from a defined client or not for a specified client]"
		registercommand "botsay" cmd_botsay 3 "s" "^botsay ^f1Make the server bot speak"
		registercommand "time" cmd_time 1 "" "time ^f1Display time since map started"
		registercommand "deathrun" cmd_deathrun 2 "b" "deathrun 1|0 ^f1[enable|disable DeathRun event]"
		registercommand "pullmap" cmd_pullmap 3 "s" "pullmap [mapname] ^f1Pull the map out of the rotation if any problem with it"


		//remove commands that are useles for racing mod
		unregistercommand flagrun
		unregistercommand stats //will be re replaced by the one made for race
		unregistercommand time
		registercommand "stats" cmd_racestats 1 "|p" "stats [cn] ^f1Shows race statistics for player cn"


		//init differents win messages
		win_1 = "^f61st"
		win_2 = "^f02nd"
		win_3 = "^f43rd"

		//init forcemap boolean
		forcemap = 0

		//init map rotation
		mapnum = 0
		addservai "Jarvis" // permanant irc/command bot
		defaultvalue "addnewmaps" 0 //modify this in auto-exec.cfg
		loadracemaps $addnewmaps
		rotationlist = (randomlist $maplist)

		race //start main function
	]
	if (= $arg2 0) [
		racemod 0
		clearasleep
		
		delhandler onmapstart sendthumbnail
		
		delhandler oneditmode noedit
		delhandler onspawn reset
		delhandler onspectator listactiveclients
		delhandler ondisconnect delclient
		delhandler onconnect addclient
		delhandler ongetmap resetedit
		delhandler onreceivemap loadrace
		delhandler onswitchname checkregistered
		delhandler onpausegame checkracestarted
		delhandler onauth login
		delhandler onmodmap testingcrc
		//delhandler oncrc checkcrc
		//delhandler onmodmap checkcrc	
		delhandler ontext bot
		//pm $arg1 "racemod ^f3disabled"
		say "RACEMODE ^f3[disabled]"
		unregistercommand mapsucks
		unregistercommand skip
		unregistercommand nextmap
		unregistercommand forcemap
		unregistercommand best
		unregistercommand country
		unregistercommand pullmap

		//restore commands
		registercommand "stats" cmd_stats 1 "|p" "stats [cn] ^f1Shows game statistics for player cn for all players if passed -1"
		registercommand "time" cmd_time 2 "i|i" "time [min] [sec] ^f1Time limit for current round"

		looplist client2unghost $listclients [
			ghost 0 $client2unghost
		]
		nodamage 0
		addhandler onghosttrigger srv_onghosttrigger
		addhandler onimission srv_showbest
		addhandler onimission irc_showbest

	]

]
registercommand "race" cmd_race 3 "i" "race 1|0 ^f7start|stop racemod" //other commands don't have this line because they are added in the main function

//allow registered player to vote against the map
cmd_mapsucks = [
//	if (getvar $arg1 registered) [
//		pm $arg1 "Map vote not available right now. Please use ^f0#nextmap ^f7to skip the race"
//	] [
		cmd_nextmap $arg1
//	]
]

cmd_skip = [
	cmd_nextmap $arg1
]

//allow player to vote to skip the current map
cmd_nextmap = [
	nextmapper = $arg1
	if (= $racedone 0) [
		totalclients = []
		looplist i $activeclients [totalclients = (listadd $totalclients $i)]
		looplist i $nextmaplist [if (= (indexof $totalclients $i) -1) [totalclients = (listadd $totalclients $i)]] //including people who voted and then specced

		if (|| (&& (&& (= (indexof $nextmaplist $nextmapper) -1) (> (indexof $activeclients $nextmapper) -1)) (= $mapskipped 0)) (&& (= $nextmapper -1) (listlen $activeclients))) [
			if (!= $nextmapper -1) [ nextmaplist = (listadd $nextmaplist $nextmapper) ]
			if (= (listlen $totalclients) 2) [
				needednextmappers = 2 //when only 2 players, need the agree of both
			] [
				needednextmappers = (+ (div (listlen $totalclients) 2) (mod (listlen $totalclients) 2))
			]
				if (= (listlen $nextmaplist) $needednextmappers) [
					mapskipped = 1
					say (format "^f0Enough ^f7votes ^f0(%1/%1)^f7, map will be ^f3skipped %3" (listlen $nextmaplist) $needednextmappers (? (= $nextmapper -1) (result "(a player left)") (result (concatword "^f0(last by " (getname $nextmapper) ")"))))
					asleep 1500 [
						timeremaining -10
					]
				] [
					if (!= $nextmapper -1) [ say (format "^f0%1 ^f7wants to skip this map. If you agree, type ^f6#skip ^f0(%2/%3 votes needed)" (getname $nextmapper) (listlen $nextmaplist) $needednextmappers) ]
				]
		] [
			if (isspectator $nextmapper) [
				pm $nextmapper "^f3ERROR: ^f7you are ^f6spectated!"
			] [
				if (> (indexof $nextmaplist $nextmapper) -1) [
					pm $nextmapper "^f3ERROR: ^f7you already voted!"
				] [
					if (mapskipped) [
						pm $nextmapper "^f3ERROR: ^f7vote is done!"
					]
				]
			]
		]
	]
]

//Allow to force a map to be played
cmd_forcemap = [
	if (getvar $arg1 registered) [
		if (isspectator $arg1) [
					pm $arg1 "^f3ERROR: ^f7you are ^f6spectated!"
		] [
			fauthname = (getvar $arg1 registeredname)

			if (|| (|| (|| (=s $fauthname "nopnotme") (=s $fauthname "Fuzzy")) (=s $fauthname "Pointblank")) (=s $fauthname "Josh")) [
				if (= $racedone 0) [
					forcedmap = $arg2
					if (= (indexof $maplist $forcedmap) -1)[
						pm $arg1 (format "^f3ERROR: ^f7the map '^f3%1^f7' doesn't exist on the server" $forcedmap)
					] [
						forcemap = 1
						endrace
						say (format "%2 forced map to ^f1%1" $forcedmap $fauthname)
						ircsay (ircdgrey (format ":map: %2 forced map to %1" $forcedmap $fauthname))
					]
				]
			] [
				pm $arg1 "^f3ERROR: ^f7forcemap temporarily offline."
			]
		]
	] [
	pm $arg1 "^f3ERROR: ^f7You need to be registered to use this command"
	]
]

//cmd_forcemap = [
//	if (getvar $arg1 registered) [
//		if (isspectator $arg1) [
//					pm $arg1 "^f3ERROR: ^f7you are ^f6spectated!"
//		] [
//			if (|| (|| (>= (getperm $arg1) 3) (= (listlen $activeclients) 1))) [
//				if (= $racedone 0) [
//					forcedmap = $arg2
//					if (= (indexof $maplist $forcedmap) -1)[
//						pm $arg1 (format "^f3ERROR: ^f7the map '^f3%1^f7' doesn't exist on the server" $forcedmap)
//					] [
//						forcemap = 1
//						endrace
//						say (format "Map forced to ^f1%1" $forcedmap)
//						ircsay (ircdgrey (format ":map: Map forced to %1" $forcedmap))
//					]
//				]
//			] [
//				pm $arg1 "^f3ERROR: ^f7You need to be alone or admin to use this command"
//			]
//		]
//	] [
//	pm $arg1 "^f3ERROR: ^f7You need to be registered to use this command"
//	]
//]

cmd_racerestart = [
	if (getvar $arg1 registered) [
		if (|| (>= (getperm $arg1) 3) (= (listlen $activeclients) 1)) [
		if (= $racedone 0) [
			forcedmap = $racemap
				forcemap = 1
				endrace
				say (format "^f1INFO: ^f7Restarting ^f0%1" $forcedmap)
		]
		] [
			pm $arg1 "^f3ERROR: ^f7You need to be alone or admin to use this command"
		]
	] [
	pm $arg1 "^f3ERROR: ^f7You need to be registered to use this command"
	]
]

cmd_intermission = [
	if (= $racedone 0) [
		endrace
		say "^f1Intermission forced"
		loadracemaps
		ircsay (ircdgrey ":currency_exchange: Intermission forced")
	]
]

cmd_best = [
	if $best_db [
		pm $arg1 (format "Best run for ^f1%1: ^f2%2 ^f7with ^f6%3" $racemap (at $best 0) (timeconverterlight (at $best 1)))
	] [
		if $newbest [
			pm $arg1 (format "Best run for ^f1%1: ^f2%2 ^f7with ^f6%3 ^f3[new record]" $racemap (getname (at $best 0)) (timeconverterlight (at $best 1)))
		] [
			pm $arg1 "^f3ERROR: ^f7No actual runs for this map ^f0=> ^f2Be the first!"
		]
	]
]

cmd_adminchat = [
	saytoadmin (format "^f6ADMIN: ^f0%1: ^f7%2" (getname $arg1) $arg2)
]

cmd_authchat = [
	looplist client $listclients [
		if (>= (getperm $client) 2) [ pm $client (format "^f0AUTH: ^f0%1: ^f7%2" (getname $arg1) $arg2) ]
	]
]


cmd_irc = [
	if (getvar $arg1 registered) [
		ircsay (ircorange (format "Private message from %1(%2): %3" (getname $arg1) $arg1 $arg2))
		pm $arg1 (format "^f1INFO: ^f7Message has been sent over IRC")
	] [
	pm $arg1 "^f3ERROR: ^f7You need to be registered to use this command"
	]
]

cmd_raceghost = [
	if (getvar $arg1 registered) [
		if (isspectator $arg1) [
					pm $arg1 "^f3ERROR: ^f7you are ^f6spectated!"
		] [
			raceghost $arg1 $arg2 1 // still need to fix position
			say (concat "^f1INFO: ^f7raceghosting" (getname $arg1) (? $arg2 (result "^f0enabled") (result "^f3disabled")))
		]
	] [
			pm $arg1 "^f3ERROR: ^f7you need to be ^f1registered ^f7to use this command. Simply do it at ^f6https://racingxtreme.net"
	]
]

cmd_racestats = [
	pm $arg1 "^f3Not available atm"
]

cmd_disbanmsg = [
	disbanmsg $arg2
	say (concat "Ban and kick messages" (? $arg2 "^f0disabled" "^f3enabled" ))
]
cmd_refresh = [
	execdir racing
	unregistercommand "race"
	pm $arg1 "Race files reloaded ^f0successfully!"
]

cmd_racemute = [
	setvar $arg2 isbanned 1
	pm $arg1 (format "You ^f3racemuted ^f7%1" (getname $arg2))
]

cmd_raceunmute = [
	setvar $arg2 isbanned 0
	pm $arg1 (format "You ^f3unracemuted ^f7%1" (getname $arg2))
]

cmd_discall = [
	looplist i (listclients) [if (!= $i $arg1) [cmd_disc -1 $i]]
]


cmd_country = [
	pm $arg1 (format "^f0%1 ^f7connected from ^f0%2" (getname $arg2) (getcountry (getip $arg2)))
]

cmd_racereset = [
	if (getvar $arg1 registered) [
		if (|| (>= (getperm $arg1) 3) (= (listlen $activeclients) 1)) [
			if (= $racedone 0) [
			if (< (div $instantgtime 60) 10) [
				say "^f6WARNING: ^f7The race is going to be reset ^f7in 5 seconds^f7, ^f3prepare to die..."
				asleep 5000 [
					clearasleep
					winnerlist = []
					say "^f1INFO: ^f7Podium ^f7cleared"
					nextmaplist = []
					cmd_killall
					racetime (- 10 (div $instantgtime 60))
					detectwin
				]
			] [
				pm $arg1 "^f3ERROR: ^f7The race has been played for more than 10 minutes, use ^f1#racerestart ^f7instead"
			]
		]
		] [
			pm $arg1 "^f3ERROR: ^f7You need to be alone or admin to use this command"
		]
	] [
	pm $arg1 "^f3ERROR: ^f7You need to be registered to use this command"
	]
]

cmd_racetime = [
	racetime $arg2
]

cmd_racepause = [
	if (getvar $arg1 registered) [
			if (= $racedone 0) [
			if (&& (= (getvar $arg1 pausetime) -1) (= $arg2 1)) [
				localpause $arg1 1 128
				setvar $arg1 pausetime $getmillis
				pm $arg1 "^f1INFO: ^f7Your run has been paused and your time saved, to resume it, use ^f0#racepause 0"
			] [
				if (&& (!= (getvar $arg1 pausetime) -1) (= $arg2 0)) [
					if (> (- (getmillis) (getvar $arg1 pausetime)) 5000) [
						localpause $arg1 0 128
						setvar $arg1 time (+ (getvar $arg1 time) (- $getmillis (getvar $arg1 pausetime)))
						pm $arg1 (format "^f1INFO: ^f7Time restored, have fun! (afk time: ^f0%1^f7)" (timeconverterlight (divf (- (getmillis) (getvar $arg1 pausetime)) 1000)))
						setvar $arg1 pausetime -1
					] [
						pm $arg1 (format "^f3ERROR: ^f7you need to wait ^f6%1 ^f7before beeing allowed to unpause" (timeconverterlight (- 5 (divf (- (getmillis) (getvar $arg1 pausetime)) 1000))))
					]
				] [
					pm $arg1 (format "^f3ERROR: ^f7already %1!" (? ($arg2) (result "paused") (result "unpaused")))
					]
			]
		]
	] [
	pm $arg1 "^f3ERROR: ^f7You need to be registered to use this command"
	]
]

cmd_localpause = [
	localpause $arg2 $arg3 $arg4
	pm $arg1 (format "^f1INFO: ^f7%1 is now %2 ^f7to move" (getname $arg2) (? ($arg3) (result "^f3unable") (result "^f0able")))
]

cmd_botsay = [
	botsay 128 $arg2
]

cmd_time = [
	pm $arg1 (format "^f1INFO: ^f7Map runtime: ^f2%1" (action_time (divf (- $instantmillis $gtime) 1000)))
]

cmd_deathrun = [
	if (getvar $arg1 registered) [
	//	if (= (indexof $winnerlist (getname $arg1)) -1) [
	//				pm $arg1 "^f3ERROR: ^f7you need to win the race first"
	//	] [
			setvar $arg1 deathrun (= $arg2 1) // enable/disable deathrun
			pm $arg1 (concat "^f1INFO: ^f7deatrun" (? $arg2 (result "^f0enabled") (result "^f3disabled")))
	//	]
	] [
			pm $arg1 "^f3ERROR: ^f7you need to be ^f1registered ^f7to use this command. Simply do it at ^f6https://racingxtreme.net"
	]
]

cmd_pullmap = [
	if (= (indexof $maplist $forcedmap) -1) [
		pm $arg1 (format "^f3ERROR: ^f7the map '^f3%1^f7' doesn't exist on the server" $forcedmap)
		] [
			race_db_pullmap $arg1
		]
]

sendthumbnail = [
    if (!=s (getmap) "") [
        ircsay (format "https://www.racingxtreme.net/mapimgs/%1.jpg" (getmap))
    ]
]
