//all functions used by race_main.cfg

//kick proxy users
proxykick = [
	if (=s (getcountry (getip $arg1)) "Anonymous Proxy") [
		echo (format "proxy detected, banning %1 with ip %2" (getname $arg1) (getip $arg1))
	
		pm $arg1 "^f3You only need a proxy if you want to cause trouble!"
		asleep 100 [disconnect $player2ban]
	]
]


//load racemaps from /maps directory if they have a corresponding podium profile
loadracemaps = [
	maplist = []

	loopfiles i $mapdir ogz [
 	maplist = (listadd $maplist $i)
	]
]

//load the race map
loadrace = [
 mapmode $racemap 1
	loadmap $racemap
	race_db_id_map = (race_db_loadmap) // cache id_map corresponding to the mapname to improve speed for future queries
]

//used to make a random map rotation
randomlist = [
	local oldlist
	oldlist = $arg1
	local newlist
	loop i (listlen $oldlist) [
		num = (rnd (listlen $oldlist))
		newlist = (concat $newlist (at $oldlist $num))
		oldlist = (listdel $oldlist (at $oldlist $num))
	]
	result $newlist
]

//return index of the converted client var corresponding to the given argument
getclient_array_var = [
	array = $arg1
	item = $arg2
	result (listfind var $array [=s (at $var 0 0) $arg2])
]

//check when player finished load the map
waitget = [
	if (>= (listlen $gotlist) (listlen $activeclients)) [
		clearasleep
		startrace 1
	] [
		asleep 1 [
			waitget
		]
	]
]

//list of all players racing
listactiveclients = [
 activeclients = (allactiveplayers)
 setvar $arg1 lastafk (concat $getmillis "") //reset lastafk millis to not get stuck in spec
]

//useful for stats, return position of the higher number of a list
bestof = [
	local numlist
	numlist = $arg1
	local bestnum
	bestnum = -1
	loop i (listlen $numlist) [
		if (> (at $numlist $i) (at $bestnum $i)) [
			bestnum = $i
		]
	]
	result $bestnum
]

//start the race
startrace = [
	if $arg1 [
		say "The race will start in ^f610 ^f7seconds, get ready!"
		sleeptime = 5000
	] [
		sleeptime = 1
	]
	asleep $sleeptime [
		loop i 5 [
			asleep (* $i 1000) [
				say (format "The race will start in ^f6%1 ^f7seconds" (- 5 @i))
			]
		]
		asleep 5000 [
			pause 0
			racedone = 0
			say "The race has ^f0started! ^f2good luck!"
			clearasleep

   //event_val = (rnd 2 0) // determine the new event to be played (or not) for the new race (10% chances)
   //if (= $event_val 1) [
				// $event
			//	deathrun
			//]

			//reset bot function
			botspeack = 1

			racetime 10
			gtime = $getmillis
			
			detectwin
			race_started = 1
			addhandler ongetmap resetedit // suicide on getmap to reset client
			if $best_db [
						looplist client $listclients [
							pm $client (format "^f1[^f3Global Record^f1] ^f2%1 ^f7by ^f3%2 %3 %4 %5" (timeconverterlight (at $best 1)) (at $best 0) (? ($ultimate_db) (result (format "^f4| ^f1[^f5Ultimate Record^f1] ^f2%1 ^f7by ^f3%2" (timeconverterlight (at $ultimate 1)) (at $ultimate 0))) (result "")) (? ($weekly_db) (result (format "^f4| ^f1[^f0Weekly Record^f1] ^f2%1 ^f7by ^f3%2" (timeconverterlight (at $weekly 1)) (at $weekly 0))) (result "")) (? (&& (getvar $client registered) (!= (getvar $client local_time) -1)) (result (format "^f4| ^f1Your best: ^f2%1" (timeconverterlight (getvar $client local_time))))))
						]
				if (numclients) [ircsay (format ":first_place: ^f1Current Record: %1 by %2" (timeconverterlight (at $best 1)) (at $best 0))]
			]

		
			looplist client $listclients [
				pm $client (format "^f1%1 ^f7has a ^f0%2/5 ^f7rating [%3 votes] ^f4| ^f7Map Difficulty: %4" $racemap (at $rating 1) (at $rating 0) $difficulty)
			]

   if $weekly_db [
    looplist client $listclients [
     //pm $client (format "^f1[^f0Weekly Record^f1] ^f2%1 ^f7by ^f3%2" (timeconverterlight (at $weekly 1)) (at $weekly 0))
    ]
   ]
   
   //pm $client (format "^f1%1 ^f7has a ^f0%2/5 ^f7rating [%3 votes] ^f4| ^f7Map Difficulty: %4" $racemap (at $rating 1) (at $rating 0) $difficulty)
		]
	]
]

endrace = [
	racedone = 1
	clearasleep
	forceintermission
	if (listlen $winnerlist) [
  
  // GLOBAL RECORDS
		if $newbest [
			if (getvar (at $best 0) registered) [
				setvar (at $best 0) needdemo 1
				racedemo 1 //save the demo corresponding to the new record
				race_db_addresult (at $best 0) (at $best 1) 1
    

				if (= (strstr (getname (at $best 0)) (getvar (at $best 0) registeredname)) 1) [
					     pm (at $best 0) (format "^f1INFO: ^f7This best run was added under your account name ^f0(%1)" (getvar (at $best 0) registeredname))
				]
			] [
				pm (at $best 0) "^f3WARNING: ^f7This new best run will not be saved. Please register at ^f0http://racingxtreme.net"
			]
		]
  
  //WEEKLY RECORDS
  if $newweeklybest [
			if (getvar (at $weekly 0) registered) [
				race_db_addweekly (at $weekly 0) (at $weekly 1) 1

				//say (format "[TEST weeklybest]: wrote into db for %1 for time %2" (at $weekly 0) (at $weekly 1))
			] [
				pm (at $weekly 0) "^f3WARNING: ^f7This new weekly best run will not be saved. Please register at ^f0http://racingxtreme.net"
			]
		]
		
		 //ULTIMATE RECORDS
  if $newultimatebest [
			if (getvar (at $ultimate 0) registered) [
				setvar (at $ultimate 0) needdemo 1
				racedemo 1 //save the demo corresponding to the new record
				race_db_addultimate (at $ultimate 0) (at $ultimate 1) 1

				//say (format "[TEST weeklybest]: wrote into db for %1 for time %2" (at $weekly 0) (at $weekly 1))
			] [
				pm (at $ultimate 0) "^f3WARNING: ^f7This new ultimate best run will not be saved. Please register at ^f0http://racingxtreme.net"
			]
		]
  
  
  //echo "XP STARTED race_functions.cfg";
  racexp
		racestats
	] [
		say "^f6Better luck next time!"
	]
	asleep 3600 [
		say "starting a new race ^f7in ^f25 seconds..."
		asleep 5000 [
			clearasleep
			mapnum = (+ $mapnum 1)
			race
		]
	]
]

timediff = [
	if (<f (- $arg1 $arg2) 0) [
		result (format "^f0[%1]" (-f $arg1 $arg2))
	] [
		result (format "^f3[+%1]" (-f $arg1 $arg2))
	]
]

checkafk = [  //autospec racer if not moving for 35 seconds (value taken from pastaland server)
  lastafk = (getvar $arg1 lastafk)
  if (= (isspectator $arg1) 0) [
    if (|| (|| (!= (at $pos 0) (at $lastafk 1)) (!= (at $pos 1) (at $lastafk 2))) (!= (at $pos 2) (at $lastafk 3))) [
      setvar $arg1 lastafk (concat $getmillis $pos)
    ] [
      if (&& (>= (- $getmillis (at $lastafk 0)) (* 1000 60)) (!=s (at $lastafk 0) "")) [
        spectator 1 $arg1
        pm $arg1 (format "^f1INFO: ^f0%1 ^f7spectated you because you were AFK for more than 60 seconds" (getname 128))
        //botsay 128 (format "I have put %1 to spec because of inactivity" (getname $arg1))
      ]
    ]
  ]
]

isonpodium = [ //isonpodium $racer; return true if $racer is valid in podium

	pos = (getpos $arg1)
	checkafk $arg1 $pos

	validpos = 0

	loop i (listlen (at $podiumpos 0)) [
		if (&& (> (at $pos 0) (- (at $podiumpos 0 $i 0) (at $podiumpos 0 $i 3))) (< (at $pos 0) (+ (at $podiumpos 0 $i 0) (at $podiumpos 0 $i 3)))) [
			if (&& (> (at $pos 1) (- (at $podiumpos 0 $i 1) (at $podiumpos 0 $i 3))) (< (at $pos 1) (+ (at $podiumpos 0 $i 1) (at $podiumpos 0 $i 3)))) [
				if (&& (> (at $pos 2) (- (at $podiumpos 0 $i 2) (at $podiumpos 0 $i 3))) (< (at $pos 2) (+ (at $podiumpos 0 $i 2) (at $podiumpos 0 $i 3)))) [
					if  (&& (>f $arg2 3) (< (getping $arg1) 500)) [  //fix when client win spawning with lag
						validpos = (+ $validpos 1)
					]
				]
			]
		]
	]
	if (>= $validpos 1) [
		result 1
	] [
		result 0
	]
]

//echo $activeclients
//say $activeclients

//say (getpos 5)
//say $podiumpos
//say (getvar 5 hasrespawn)

//detect if a player is in the podium
detectwin = [
  //loadevent 0 //keep loading the event even when someone win

	looplist client $activeclients [
		instantmillis = $getmillis //to have the exact millis at this instant everywhere
		instanttime = (divf (- $instantmillis (getvar $client time)) 1000)
		instantgtime = (divf (- $instantmillis $gtime) 1000)
		if (isonpodium $client $instanttime) [
		if (getvar $client hasrespawn) [
		   setvar $client hasrespawn 0
			if (getvar $client isbanned) [
				pm $client (format "^f1<%4> ^f0%1 ^f7has won the ^f2%3 PLACE ^f7in %2!" (getname $client) (timeconverter $instanttime) (getalias (format win_%1 (+ (listlen $winnerlist) 1))) (action_time $instantgtime))
			] [
			setvar $client winnertime $instanttime
			if (= (indexof $winnerlist $client) -1) [
					setvar $client winnergtime $instantgtime
					winnerlist = (listadd $winnerlist $client)
                    if (<= (listlen $winnerlist) 3) [
                        listactiveclients
                        say (format "^f1<%4> ^f0%1 ^f7has won the ^f2%3 PLACE ^f7in %2!" (getname $client) (timeconverter $instanttime) (getalias (format win_%1 (listlen $winnerlist))) (action_time $instantgtime))
                        if (|| (= (listlen $winnerlist) 1) (= (listlen $activeclients) 1)) [
                             clearasleep
							 racetime 1
						 detectwin
                        ] [
                         if (|| (= (listlen $winnerlist) 3) (= (listlen $activeclients) (listlen $winnerlist))) [
						     clearasleep
						     asleep 1000 [
						         timeremaining -10
						     ]
						  ]
						 ]
                    ] [
                        pm $client (format "^f7You are ^f2%1th^f7 with %2, be in the ^f6top3^f7 to be displayed!" (listlen $winnerlist) (timeconverter $instanttime))
                    ]
                ] [
				 if (<f $instanttime (getvar $client winnertime)) [
				  say (format "^f1<%5> ^f0%1 ^f7has ^f2BEATEN ^f7their previous time ^f2(%2) ^f7for ^f6%3 ^f0[-%4s]" (getname $client) (timeconverterlight (getvar $client winnertime)) (timeconverterlight $instanttime) (-f (getvar $client winnertime) $instanttime) (action_time $instantgtime))
				  setvar $client winnertime $instanttime
				 ] [
				   pm $client (format "Your best score is ^f2%1 ^f7and you did ^f6%2 ^f3[%3s]" (timeconverterlight (getvar $client local_time)) (timeconverterlight $instanttime) (-f $instanttime (getvar $client local_time)))
				 ]
				]
   
   if (= $weekly -1) [
					//say "THERE IS NO WEEKLY SET"
					if (getvar $client registered) [
						weekly = (concat $client (getvar $client winnertime))
						newweeklybest = 1
						weekly_db = 0 //the best run is now not from the database
					] [
						pm $client "^f3WARNING ^f7This run will not be saved, to save your best runs and your personal progression in the future, register at ^f0http://racingxtreme.net"
					]
				] [
					if (<f (getvar $client winnertime) (at $weekly 1)) [
						if (getvar $client registered) [
							//say "NEW WEEKLY SET [OVERRIDE]"
							if (>= (getvar $client xp) 250000) [
								//pm $client (format "Sorry %1, you are so xtreme you can only compete in [Ultimate Records] from here on out." (getname $client))
							] [
								weekly = (concat $client (getvar $client winnertime))
								newweeklybest = 1
								weekly_db = 0
								botsay 128 (format "New [Weekly Record] by %1!" (getname $client))
								ircsay (format ":high_brightness: New weekly record set by %1!" (getname $client))
							]
						] [
							pm $client "^f3WARNING ^f7This run will not be saved, to save your best runs and your personal progression in the future, register at ^f0http://racingxtreme.net"
						]
					]
				]
   
			if (= $best -1) [
					if (getvar $client registered) [
						best = (concat $client (getvar $client winnertime))
						newbest = 1
						best_db = 0 //the best run is now not from the database
					] [
						pm $client "^f3WARNING ^f7This run will not be saved, to save your best runs and your personal progression in the future, register at ^f0http://racingxtreme.net"
					]
				] [
					if (<f (getvar $client winnertime) (at $best 1)) [
						if (getvar $client registered) [
							if (>= (getvar $client xp) 250000) [
								pm $client (format "Sorry %1, you are so xtreme you can only compete in [Ultimate Records] from here on out." (getname $client))
							] [
								best = (concat $client (getvar $client winnertime))
								newbest = 1
								best_db = 0
								botsay 128 (format "Nice, new [Global Record] %1!" (getname $client))
								ircsay (format ":high_brightness: New record set by %1!" (getname $client))
							]
						] [
							pm $client "^f3WARNING ^f7This run will not be saved, to save your best runs and your personal progression in the future, register at ^f0http://racingxtreme.net"
						]
					]
				]
			
			if (= $ultimate -1) [
					if (getvar $client registered) [
						ultimate = (concat $client (getvar $client winnertime))
						newultimatebest = 1
						ultimate_db = 0 //the best run is now not from the database
					] [
						pm $client "^f3WARNING ^f7This run will not be saved, to save your best runs and your personal progression in the future, register at ^f0http://racingxtreme.net"
					]
				] [
					if (<f (getvar $client winnertime) (at $ultimate 1)) [
						if (getvar $client registered) [
							if (<= (getvar $client xp) 250000) [
								pm $client (format "Sorry %1, you need to reach lvl |7| to participate in Ultimate Records." (getname $client))
							] [
								ultimate = (concat $client (getvar $client winnertime))
								newultimatebest = 1
								ultimate_db = 0
								//botsay 128 (format "HOLY SHIT %1, YOU BEAT THE ULTIMATE RECORD! [+1000 xp]" (getname $client))
								ircsay (format ":high_brightness: New ultimate record set by %1!" (getname $client))
							]
						] [
							pm $client "^f3WARNING ^f7This run will not be saved, to save your best runs and your personal progression in the future, register at ^f0http://racingxtreme.net"
						]
					]
				]
			 
    if (getvar $client registered) [ //action to do when client registered
       
       //echo (getvar $client local_time)
       
       //echo (getvar $client winnertime)
       
       //echo (<f (getvar $client winnertime) (getvar $client local_time))
       
       if (|| (= (getvar $client local_time) -1) (<f (getvar $client winnertime) (getvar $client local_time))) [
        say (format "^f1INFO:^f7 New personal best time added for ^f0%1^f7! %2" (getname $client) (? (!= (getvar $client local_time) -1) (result (concatword "^f0[-" (-f (getvar $client local_time) (getvar $client winnertime)) "]  ^f5[+25xp]"))))
        race_db_add_local_best $client
        setvar $client local_time (getvar $client winnertime)
       ]
			   ]
			]
			]
		]
	]
	asleep 1 [
		detectwin
	]
]