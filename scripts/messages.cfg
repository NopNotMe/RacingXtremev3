//here standart events' handlers are described

//------ onconnect [cn] ------//

//by Salatiel (salatielsauer.github.io)

getflag = [
  pcountry = (getcountry (getip $arg1)) ;
  countries = ["undefined" "United Arab Emirates" "Afghanistan" "Armenia" "Angola" "Antarctica" "Argentina" "American Samoa" "Austria" "Australia" "Barbados" "Belgium" "Bangladesh" "Bulgaria" "Bermuda" "Bolivia" "Brazil" "Bahamas" "Canada" "Switzerland" "Chile" "Cameroon" "Colombia" "Costa Rica" "Cuba" "Cape Verde" "Christmas Island" "Germany" "Dominican Republic" "Algeria" "Ecuador" "Estonia" "Egypt" "Spain" "Ethiopia" "Finland" "France" "Georgia" "Guinea" "Greece" "Guatemala" "Hong Kong" "Haiti" "Hungary" "Indonesia" "Israel" "India" "Iraq" "Italy" "Jamaica" "Japan" "Cayman Islands" "Lithuania" "Madagascar" "Mexico" "Nigeria" "Netherlands" "Nepal" "Peru" "Poland" "Puerto Rico" "Portugal" "Paraguay" "Romania" "Serbia" "Russian Federation" "Sudan" "Slovenia" "Turkey" "Ukraine" "Venezuela" "South Africa" "United States" "Norway" "United Kingdom" "Moldova, Republic of" "Kenya" "Iraq" "Liberia" "Pakistan" "Palestine" "Senegal" "Soviet Union" "Uruguay" "Korea, Republic of" "Croatia"]

  abbrevlist = ["black" "ae" "af" "am" "ao" "aq" "ar" "as" "at" "au" "bb" "be" "bd" "bg" "bm" "bo" "br" "bs" "ca" "ch" "cl" "cm" "co" "cr" "cu" "cv" "cx" "de" "do" "dz" "ec" "ee" "eg" "es" "et" "fi" "fr" "ge" "gn" "gr" "gt" "hk" "ht" "hu" "id" "il" "in" "iq" "it" "jm" "jp" "ky" "lt" "mg" "mx" "ng" "nl" "np" "pe" "pl" "pr" "pt" "py" "ro" "rs" "ru" "sd" "si" "tr" "ua" "ve" "za" "us" "no" "gb" "md" "ke" "iq" "lr" "pk" "ps" "sn" "su" "uy" "kr" "hr"]

  c = (indexof $countries $pcountry)
  abbrev = (concatword ":flag_" (at $abbrevlist $c) ":")
  result $abbrev
]

irc_onconnect = [
	ircsay (ircgreen (format ":inbox_tray: JOIN %1(%2) from %3 [%4/%5]" (getname $arg1) $arg1 (concatword (getflag $arg1)) $numclients $maxclients))
]

addhandler onconnect irc_onconnect

srv_onconnect = [
if (isgeoip) [
	looplist i $listclients [
		if (>= (getperm $i) 3) [
			pm $i (format "^f0%1 ^f7is connected from %2 ^f1IP: %3" (getname $arg1) (concatword (? (|| (=s (getcity (getip $arg1)) "unknown") (= (isgeocity) 0)) () (result (concatword "^f0" (getcity (getip $arg1)) ", "))) "^f0" (getcountry (getip $arg1))) (getip $arg1))
		] [
			pm  $i (format "^f0%1 ^f7is connected from %2" (getname $arg1) (concatword "^f0" (getcountry (getip $arg1))))
		]
	]
	pm $arg1 (format "Welcome to ^f1R^f7acing ^f6X^f7treme ^f0%1!" (getname $arg1))
]
]
addhandler onconnect srv_onconnect

log_onconnect = [ log (format "CONNECT %1(%2)(%3)" (getname $arg1) $arg1 (getip $arg1)) ]
addhandler onconnect log_onconnect



//------ ondisconnect [cn] ------//
irc_ondisc = [ ircsay (ircgrey (format ":outbox_tray: LEAVE %1(%2) [%3/%4]" (getname $arg1) $arg1 (- $numclients 1) $maxclients))]
addhandler ondisconnect irc_ondisc

log_ondisc = [ log (format "DISCONNECT %1(%2) - Connection time: %3" (getname $arg1) $arg1 (formatmillis "%hh %mm %ss" (getonline $arg1))) ]
addhandler ondisconnect log_ondisc


//------ @irc_onjoin [client]-----//
irc_notifyjoin = [ say (format "^f0join(IRC): ^f7%1" $arg1) ]
addhandler irc_onjoin irc_notifyjoin

//------ @irc_onquit [client]-----//
irc_notifyquit = [ say (format "^f4leave(IRC): ^f7%1" $arg1) ]
addhandler irc_onquit irc_notifyquit

//------ @ontext [cn] [msg] ------//
irc_text = [
//	if (= (getplayermodel $arg1) 0) [icon = mrfixit];
//	if (= (getplayermodel $arg1) 1) [icon = snoutx10k];
//	if (= (getplayermodel $arg1) 2) [icon = ogro];
//	if (= (getplayermodel $arg1) 3) [icon = inky];
//	if (= (getplayermodel $arg1) 4) [icon = captaincannon];

	//ircsay (format "This is a test eval: %1" (eval (concat 'getplayermodel ' $arg1)));

	//ircsay (format "This is a test: %1" (eval (concat 'getplayermodel ' $arg1)));
	
	icon = inky;

	ircsay (format ":%4::speech_balloon: ** %1(%2) **: %3" (getname $arg1) $arg1 $arg2 $icon);
]
addhandler ontext irc_text

log_text = [ log (format "%1[%2] %3" (getname $arg1) $arg1 $arg2) ]
addhandler ontext log_text



//------ onmapstart ------//
irc_mapstart = [
	if (numclients) [
		ircsay (ircblue (format ":map: Racing on %1 [%2]" (getmap) (numclients)) )
	]
]
addhandler onmapstart irc_mapstart

log_mapstart = [ log (format "MAP CHANGED: %1 %2" (modetostr (getmode)) (getmap) ) ]
addhandler onmapstart log_mapstart



//------ onspectator [cn] [1|0] ------//
//srv_onspec = [ say (format "%1  is %2 now" (orange (getname $arg1)) (? $arg2 "spectated" "unspectated") ) ]
//addhandler onspectator srv_onspec

//log_onspec = [ log (format "PLAYER: %1(%2) is %2 now" (getname $arg1) $arg1 (? $arg2 "spectated" "unspectated") ) ]
//addhandler onspectator log_onspec



//------ onsetmaster [cn] [1|0] [passhash] [authname] ------//
//srv_onmaster = [ say (format "%1 master status is ^f2%2^f7  (authname: ^f5%3^f7)" (getname $arg1) $arg2 $arg4 ) ]
//addhandler onmaster srv_onmaster

irc_onsetmaster = [
	txt = (format "%1 %2(%3) %4 %5" (ircgreen "MASTER:")  (getname $arg1) $arg1 (? $arg2 "claimed" "relinquished") (? $arg2 (privname $arg2) "priveleges"))
	if (!=s $arg4 "") [ txt = (format "%1 as '%2'" $txt $arg4) ]
	if (!=s $arg5 "") [ txt = (format "%1 [%2]" $txt $arg5) ]
	ircsay $txt
]
//addhandler onsetmaster irc_onsetmaster
delhandler onsetmaster irc_onsetmaster

log_master = [
	txt = (format "MASTER: %1(%2) %3 %4" (getname $arg1) $arg1 (? $arg2 "claimed" "relinquished") (? $arg2 (privname $arg2) "priveleges"))
	if (!=s $arg4 "") [ txt = (format "%1 as '%2'" $txt $arg4) ]
	if (!=s $arg5 "") [ txt = (format "%1 [%2]" $txt $arg5) ]
	log $txt
]
addhandler onsetmaster log_master



//------ oncommand ------//
//srv_oncommand = [ say (format "USER %1 run command '%2'" (getname $arg1) $arg2) ]
//addhandler oncommand srv_oncommand
//log_oncommand = [ echo (format "%1 #command: %2" $arg1 $arg2) ]
//addhandler oncommand log_oncommand


//------ onimission ------//

//------ onteamkill [cn] ------//


//------ @onsayteam [cn] [msg] ------//
log_onsayteam = [ log (format "TEAMCHAT %1(%2) : %3" (getname $arg1) $arg1 $arg2) ]
addhandler onsayteam log_onsayteam



//------ @onmastermode [cn] [mode] ------//
irc_onmastermode = [ ircsay (ircorange (format ":lock: %1(%2) set mastermode to %3" (getname $arg1) $arg1 $arg2) ) ]
addhandler onmastermode irc_onmastermode

log_onmastermode = [ log (format "MM: %1(%2) set mastermode to %3" (getname $arg1) $arg1 $arg2 ) ]
addhandler onmastermode log_onmastermode




//------ @onswitchname [cn] [newname] ------//
irc_onswitchname = [ if (&& (!=s $arg2 $arg3) (!= $arg4 1)) [ircsay (ircblue (format ":recycle: %1(%2) is now known as %3" (ircorange $arg3) $arg1 (ircorange $arg2) ) ) ]]
addhandler onswitchname irc_onswitchname

log_onswitchname = [ if (&& (!=s $arg2 $arg3) (!= $arg4 1)) [log (format "%1(%2) is now known as %3" $arg3 $arg1 $arg2) ]]
addhandler onswitchname log_onswitchname


//------ onswitchmodel [cn] [mdl] ------//



//------ @onswitchteam [cn] [newteam] ------//
//irc_onswitchteam = [ ircsay (ircblue (format "%1(%2) switched to team %3" (getname $arg1) $arg1 (ircorange $arg2) ) )]
//addhandler onswitchteam irc_onswitchteam

log_onswitchteam = [ log (format "%1(%2) switched to team %3" (getname $arg1) $arg1 $arg2) ]
addhandler onswitchteam log_onswitchteam



//------ onmapvote [cn] [map] [mode] ------//

//------ @onclearbans [cn] ------//
irc_onclearbans = [ ircsay (ircblue (format "%1(%2) cleared all bans" (getname $arg1) (? (= $arg1 -1) "console" $arg1) ) ) ]
addhandler onclearbans irc_onclearbans

log_onclearbans = [ log (format "KB: %1(%2) cleared all bans" (getname $arg1) (? (= $arg1 -1) "console" $arg1) ) ]
addhandler onclearbans log_onclearbans


//------ @onkick [cn] [victim] ------//
irc_onkick = [
	ircsay (ircred (format ":boot: %1(%2) has been kicked from server by %3(%4)" (getname $arg2) $arg2 (getname $arg1) (? (= $arg1 -1) "console" $arg1)))
]
addhandler onkick irc_onkick

srv_onkick = [
	say (format "^f1INFO: ^f7%1(%2) has been ^f3kicked ^f7from server by %3(%4)" (getname $arg2) $arg2 (getname $arg1) (? (= $arg1 -1) "autokick" $arg1))
]
addhandler onkick srv_onkick

log_onkick = [
	log (format "KB: %1(%2) (%3) was kicked from server by %4(%5)" (getname $arg2) $arg2 (getip $arg2) (getname $arg1) (? (= $arg1 -1) "console" $arg1))
]
addhandler onkick log_onkick

//------ @onsetteam [cn] [newteam] ------//
irc_onsetteam = [ ircsay (ircblue (format "%1(%2) was forced to team %3" (getname $arg1) $arg1 (ircorange $arg2) ) )]
addhandler onsetteam irc_onsetteam

log_onsetteam = [ log (format "%1(%2) was forced to team %3" (getname $arg1) $arg1 $arg2) ]
addhandler onsetteam log_onsetteam


// /* DEMOS */
//------ @onrecorddemo ------//
//------ onstopdemo ------//
//------ @oncleardemos [demonum] ------//
//------ @onlistdemos [cn] ------//
//------ @ongetdemo [cn] [demonum] ------//
// /* END OF DEMOS */



// /* BOTS */
//------ @onaddbot [skill] ------//
//irc_onaddbot = [ ircsay  (format "Bot with %1 was added" (? (> $arg1 -1) (concat "skill" $arg1) "random skill")) ]
//addhandler onaddbot irc_onaddbot

//log_onaddbot = [ log (format "Bot with %1 was added" (? (> $arg1 -1) (concat "skill" $arg1) "random skill")) ]
//addhandler onaddbot log_onaddbot


//------ @ondelbot ------//
//irc_ondelbot = [ ircsay  "Bot was deleted" ]
//addhandler ondelbot irc_ondelbot

//log_ondelbot = [ log "One bot was deleted" ]
//addhandler ondelbot log_ondelbot



//------ onbotlimit [cn] [limit] ------//
//------ onbotbalance [cn] [balance] ------//
// /* END OF BOTS */



//------ @onpausegame [1|0] ------//
srv_onpausegame = [ say (concatword "^f1Game is ^f0" (? $arg1 "paused" "resumed" )) ]
// addhandler onpausegame srv_onpausegame

irc_onpausegame = [ ircsay (ircgreen (? $arg1 "Game was paused" "Game was resumed") ) ]
//addhandler onpausegame irc_onpausegame

log_onpausegame = [ log (concatword (? $arg1 "Game was paused" "Game was resumed")) ]
addhandler onpausegame log_onpausegame



//------ onmodmap [cn] ------//
//srv_onmodmap = [ say (format "^f3%1(%2)^f7 has modified map!"  (getname $arg1) $arg1  ) ]
//addhandler onmodmap srv_onmodmap

//irc_onmodmap = [ ircsay (ircred (format "%1(%2) has  modified map!" (getname $arg1) $arg1 ) ) ]
//addhandler onmodmap irc_onmodmap

//log_onmodmap = [ log (format "MODMAP: %1(%2) has  modified map!" (getname $arg1) $arg1 ) ]
//addhandler onmodmap log_onmodmap



//------ onmute [1|0] [cn] ------//
irc_onmute = [ ircsay (format "%1(%2) has been %3" (getname $arg2) $arg2 (? $arg1 "muted" "unmuted")) ]
addhandler onmute irc_onmute

log_onmute = [ log (format "%1(%2) has been %3" (getname $arg2) $arg2 (? $arg1 "muted" "unmuted")) ]
addhandler onmute log_onmute

svr_onmute = [
	say (format "^f1INFO: ^f0%1(%2) ^f7has been %3" (getname $arg2) $arg2 (? $arg1 "muted" "unmuted"))
	if $arg1 [
		pm $arg2 "^f1INFO: ^f7You have been ^f0muted^f7. Other players will not see what you type in the chat."
	] [
		pm $arg2 "^f1INFO: ^f7You has been ^f0unmuted^f7. Please be polite"
	]

]
addhandler onmute svr_onmute


//shows "usage error" for  command
usage_error = [
	pm $arg1 (concatword "^f3ERROR: ^f7Incorrect usage. " (usage $arg2))
]
addhandler oncommandusageerror usage_error

//command not found
unknown_command = [
	pm $arg1 (concatword "^f3ERROR: ^f6" $commandchar $arg2 " ^f7was not found. Use ^f0" $commandchar "help ^f7for commands list.")
]
addhandler oncommandunknown unknown_command

//permissions error
perm_error = [
	pm $arg1 (concatword "^f3ERROR: ^f7You don't have enough permissions")
]
addhandler oncommandpermerror perm_error



//shows "usage" for  command
irc_usage = [
	result (concatword "Usage: " (irc_commandhelp $arg1))
]

//shows "usage error" for  command
irc_usage_error = [
	ircsay (format "%1: usage error. %2" $arg1 (irc_usage $arg2))
]
addhandler irc_oncommandusageerror irc_usage_error

//command not found
irc_unknown_command = [
	ircsay (concatword $arg1 ": command " $arg2 " not found :x:")
]
addhandler irc_oncommandunknown irc_unknown_command

//permissions error
irc_perm_error = [
	ircsay (format "%1: you don't have enough permissions" $arg1)
]
addhandler irc_oncommandpermerror irc_perm_error

// show error message aboute mute to player
svr_onmutemodetrigger = [
	msg = "^f3You can't speak"
	case $mutemode 1 [
		msg = "^f3Spectators are disallowed to speak"
	] 2 [
		msg = "^f3Only masters and admins are allowed to speak"
	] 3 [
		msg = "^f3Only admins are allowed to speak"
	]
	pm $arg1 $msg
]
addhandler onmutemodetrigger svr_onmutemodetrigger

// resume countdown
srv_onresumegame  = [
	say ( format "^f7Game will continue in ^f1%1 ^f7seconds." $resumedelay)

	loop n (- $resumedelay 1) [
		asleep (* (+ $n 1) 1000 ) [
			say (format "^f7Continue in ^f1%1 ^f7seconds..." (- $resumedelay (+ @n 1)))
		]
	]
]
addhandler onresumegame srv_onresumegame

srv_onovertime = [
	overtime_minutes = (div $overtime 60)
	overtime_seconds = (- $overtime (* $overtime_minutes 60))
	msg = (concat "^f1Teams are tied." "Overtime^f0" $overtime_minutes "min")
	if (!= $overtime_seconds 0) [
		msg = (concat $msg $overtime_seconds "sec")
	]
	say $msg
]
addhandler onovertime srv_onovertime

srv_onghosttrigger = [
	pm $arg1 "^f6WARNING: ^f7You are in ghost mode and disallowed to edit"
]
addhandler onghosttrigger srv_onghosttrigger

srv_onmutetrigger = [
	pm $arg1 "^f7You have been ^f0muted^f7. Other players will not see what you type in the chat."
]
addhandler onmutetrigger srv_onmutetrigger
